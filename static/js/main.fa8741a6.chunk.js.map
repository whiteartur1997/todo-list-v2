{"version":3,"sources":["Components/TodoItem/TodoItem.module.scss","Components/Modal/Modal.module.scss","App.module.scss","Components/TodoList/TodoList.module.scss","Components/AddTodo/AddTodo.module.scss","Components/FilterTodo/FilterTodo.module.scss","Components/TodoCounter/TodoCounter.module.scss","Components/TodoItem/TodoItem.jsx","Components/TodoList/TodoList.jsx","Components/AddTodo/AddTodo.jsx","Components/FilterTodo/FilterTodo.jsx","Components/TodoCounter/TodoCounter.jsx","Components/Modal/Modal.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TodoItem","props","classList","styles","Item","button","done","onClick","e","stopPropagation","openModal","id","text","push","hidden","toggle","className","join","TodoList","emptyWarning","tasks","length","List","map","task","key","isHidden","AddTodo","inputValue","React","createRef","Add","type","ref","current","value","add","FilterTodo","countDone","count","forEach","filterWarning","filterValue","Filter","style","color","onKeyUp","filter","TodoCounter","Counter","Modal","isOpen","modalBase","name","deleteBtn","remove","cancelBtn","cancel","App","toggleTask","state","setState","filterTasks","console","log","mappedTasks","toLowerCase","indexOf","addTask","Date","now","removeTask","newModal","modal","closeModal","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fa8741a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"TodoItem_App__1mTs7\",\"Item\":\"TodoItem_Item__2Tie0\",\"done\":\"TodoItem_done__3OAJd\",\"hidden\":\"TodoItem_hidden__3vUyr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Modal_App__1_izs\",\"modalBase\":\"Modal_modalBase__1t6Sn\",\"deleteBtn\":\"Modal_deleteBtn__2gaRK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1W0X9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"TodoList_List__uR5cA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"AddTodo_App__3SjtY\",\"Add\":\"AddTodo_Add__KjuF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"FilterTodo_Filter__28OSa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Counter\":\"TodoCounter_Counter__2ynrs\"};","import React from \"react\";\r\nimport styles from \"./TodoItem.module.scss\";\r\n\r\nconst TodoItem = props => {\r\n  let classList = [styles.Item];\r\n  let button = null;\r\n  if(props.done) {\r\n    button = <button onClick={e => {\r\n      e.stopPropagation();\r\n      props.openModal(props.id, props.text);\r\n    }}>Delete</button>\r\n    classList.push(styles.done);\r\n  }\r\n  if(props.hidden) {\r\n    classList.push(styles.hidden);\r\n  }\r\n  return(\r\n    <li id={props.id} onClick={(e) => props.toggle(props.id)} className={classList.join(\" \")}>\r\n      <span>{props.text}</span>\r\n      {button}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default TodoItem;","import React from \"react\";\r\nimport styles from \"./TodoList.module.scss\";\r\nimport TodoItem from \"../TodoItem/TodoItem\";\r\nconst TodoList = props => {\r\n  let emptyWarning = null;\r\n  if(props.tasks.length === 0) {\r\n    emptyWarning = <h1>No tasks now. Add something</h1>\r\n  } \r\n  return (\r\n    <div>\r\n      {emptyWarning || <ul className={styles.List}>\r\n        {props.tasks.map(task => {\r\n          return <TodoItem\r\n            id={task.id}\r\n            key={task.id}\r\n            text={task.text}\r\n            done={task.done}\r\n            hidden={task.isHidden}\r\n            toggle={props.toggle}\r\n            openModal={props.openModal}\r\n          />\r\n        })}\r\n      </ul>}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport styles from \"./AddTodo.module.scss\";\r\n\r\nconst AddTodo = props => {\r\n  let inputValue = React.createRef();\r\n  return(\r\n    <div className={styles.Add}>\r\n      <input type=\"text\" ref={inputValue} />\r\n      <button onClick={() => {\r\n        if(inputValue.current.value.length > 0) {\r\n          props.add(inputValue.current.value);\r\n        inputValue.current.value = \"\";\r\n        }\r\n      }}>Add task</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddTodo;","import React from \"react\";\r\nimport styles from \"./FilterTodo.module.scss\";\r\n\r\nconst FilterTodo = props => {\r\n  let countDone = () => {\r\n    let count = 0;\r\n    props.tasks.forEach(task => {\r\n      if(task.isHidden === true) count++;\r\n    })\r\n    return count;\r\n  }\r\n  let filterWarning = \"Filter your todos\";\r\n  if(countDone() === props.tasks.length) filterWarning = \"Nothing found with your filter\";\r\n\r\n  let filterValue = React.createRef();\r\n  return( \r\n      <div className={styles.Filter}>\r\n        <span style={{ color: (countDone() === props.tasks.length) ? \"red\" : \"black\" }}>{filterWarning}</span>\r\n        <input\r\n          type=\"text\"\r\n          ref={filterValue}\r\n          onKeyUp={() => {\r\n            props.filter(filterValue.current.value);\r\n          }}\r\n        />\r\n      </div>   \r\n  )\r\n}\r\n\r\nexport default FilterTodo;","import React from \"react\";\r\nimport styles from \"./TodoCounter.module.scss\";\r\n\r\n\r\nconst TodoCounter = props => {\r\n  const countDone = () => {\r\n    let done = 0;\r\n    for(let task of props.tasks) {\r\n      if(task.done) done++;\r\n    }\r\n    return done;\r\n  }\r\n  return(\r\n    <div className={styles.Counter}>\r\n      <div>All tasks: {props.tasks.length}</div>\r\n      <div>Done: {countDone()}</div>\r\n      <div>Should be done: {props.tasks.length - countDone()}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoCounter;","import React from \"react\";\r\nimport styles from \"./Modal.module.scss\";\r\n\r\nconst Modal = (props) => {\r\n  if (!props.isOpen) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={styles.modalBase}>\r\n      <div>\r\n        <h3>Do you want to delete task \"{props.name}\"</h3>\r\n        <div>\r\n          <button className={styles.deleteBtn} onClick={() => props.remove(props.id)}>Delete</button>\r\n          <button className={styles.cancelBtn} onClick={() => props.cancel()}>Cancel</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\nimport styles from './App.module.scss';\nimport TodoList from './Components/TodoList/TodoList';\nimport AddTodo from './Components/AddTodo/AddTodo';\nimport FilterTodo from './Components/FilterTodo/FilterTodo';\nimport TodoCounter from './Components/TodoCounter/TodoCounter';\nimport Modal from './Components/Modal/Modal';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      modal: {\n        isOpen: false\n      }\n    }\n  }\n\n  toggleTask = (id) => {\n    let tasks = [...this.state.tasks];\n    this.setState({\n      tasks: tasks.map(task => {\n        if (task.id === id) {\n          task.done = !task.done;\n        }\n        return task;\n      })\n    })\n  }\n\n  filterTasks = text => {\n    console.log(text);\n    let tasks = [...this.state.tasks];\n    let mappedTasks = tasks.map(task => {\n      if (task.text.toLowerCase().indexOf(text.toLowerCase()) === -1) {\n        return {\n          ...task,\n          isHidden: true\n        }\n      } else {\n        return {\n          ...task,\n          isHidden: false\n        }\n      }\n    })\n    this.setState({ tasks: mappedTasks })\n  }\n\n  addTask = (text) => {\n    let task = {\n      id: Date.now(),\n      text,\n      done: false\n    }\n    let tasks = [...this.state.tasks];\n    tasks.push(task);\n    this.setState({tasks: tasks})\n  }\n\n  removeTask = (id) => {\n    let tasks = [...this.state.tasks];\n    this.setState({\n      tasks: tasks.filter(task => {\n        return task.id !== id;\n      })\n    });\n    let newModal = {\n      ...this.state.modal,\n      isOpen: !this.state.modal.isOpen\n    };\n    this.setState({\n      modal: newModal\n    })\n  }\n\n  openModal = (id, name) => {\n    let newModal = {\n      isOpen: !this.state.modal.isOpen,\n      id,\n      name\n    }\n    this.setState({ modal: newModal });   \n  }\n\n  closeModal = () => {\n    let newModal = {\n      ...this.state.modal,\n      isOpen: !this.state.modal.isOpen\n    };\n    this.setState({modal: newModal});\n  }\n\n  render() {\n    return (\n      <div className={styles.App}>\n      <Modal \n        isOpen={this.state.modal.isOpen}\n        name={this.state.modal.name}\n        id={this.state.modal.id}\n        remove={this.removeTask}\n        cancel={this.closeModal}\n      />\n        <h1>ToDo list</h1>\n        {this.state.tasks.length ? <FilterTodo filter={this.filterTasks} tasks={this.state.tasks}/> : null}\n        <TodoList \n          tasks={this.state.tasks} \n          toggle={this.toggleTask}\n          openModal={this.openModal}\n        />\n        <AddTodo add={this.addTask}/>\n        <TodoCounter tasks={this.state.tasks}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}